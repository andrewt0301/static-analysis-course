// Generated from D:/Src/HSE/static-analysis-course/docs/lectures/03/examples/whileantlr/src/main/antlr\WhileLexer.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WhileLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMA=1, SEMI=2, ASSIGN=3, LPARENT=4, RPARENT=5, NOT=6, AND=7, OR=8, XOR=9, 
		EQ=10, NEQ=11, LESS=12, GT=13, LEQ=14, GTE=15, PLUS=16, MINUS=17, DIV=18, 
		MUL=19, MOD=20, BSHL=21, BSHR=22, BAND=23, BOR=24, BXOR=25, BNOT=26, TRUE=27, 
		FALSE=28, VAR=29, BEGIN=30, END=31, IF=32, THEN=33, ELSE=34, WHILE=35, 
		DO=36, WRITE=37, READ=38, SKIPP=39, NUM=40, ID=41, WS=42;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMMA", "SEMI", "ASSIGN", "LPARENT", "RPARENT", "NOT", "AND", "OR", 
			"XOR", "EQ", "NEQ", "LESS", "GT", "LEQ", "GTE", "PLUS", "MINUS", "DIV", 
			"MUL", "MOD", "BSHL", "BSHR", "BAND", "BOR", "BXOR", "BNOT", "TRUE", 
			"FALSE", "VAR", "BEGIN", "END", "IF", "THEN", "ELSE", "WHILE", "DO", 
			"WRITE", "READ", "SKIPP", "NUM", "ID", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "','", "';'", "':='", "'('", "')'", "'not'", "'and'", "'or'", "'xor'", 
			"'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'/'", "'*'", 
			"'%'", "'<<'", "'>>'", "'&'", "'|'", "'^'", "'~'", "'true'", "'false'", 
			"'var'", "'begin'", "'end'", "'if'", "'then'", "'else'", "'while'", "'do'", 
			"'write'", "'read'", "'skip'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMMA", "SEMI", "ASSIGN", "LPARENT", "RPARENT", "NOT", "AND", 
			"OR", "XOR", "EQ", "NEQ", "LESS", "GT", "LEQ", "GTE", "PLUS", "MINUS", 
			"DIV", "MUL", "MOD", "BSHL", "BSHR", "BAND", "BOR", "BXOR", "BNOT", "TRUE", 
			"FALSE", "VAR", "BEGIN", "END", "IF", "THEN", "ELSE", "WHILE", "DO", 
			"WRITE", "READ", "SKIPP", "NUM", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public WhileLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WhileLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000*\u00e6\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b"+
		"\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001 \u0001"+
		" \u0001!\u0001!\u0001!\u0001!\u0001!\u0001\"\u0001\"\u0001\"\u0001\"\u0001"+
		"\"\u0001\"\u0001#\u0001#\u0001#\u0001$\u0001$\u0001$\u0001$\u0001$\u0001"+
		"$\u0001%\u0001%\u0001%\u0001%\u0001%\u0001&\u0001&\u0001&\u0001&\u0001"+
		"&\u0001\'\u0004\'\u00d8\b\'\u000b\'\f\'\u00d9\u0001(\u0001(\u0005(\u00de"+
		"\b(\n(\f(\u00e1\t(\u0001)\u0001)\u0001)\u0001)\u0000\u0000*\u0001\u0001"+
		"\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f"+
		"\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f"+
		"\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u0018"+
		"1\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\'O("+
		"Q)S*\u0001\u0000\u0004\u0001\u000009\u0002\u0000AZaz\u0004\u000009AZ_"+
		"_az\u0003\u0000\t\n\r\r  \u00e7\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001"+
		"\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001"+
		"\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001"+
		"\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001"+
		"\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001"+
		"\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000"+
		"\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000"+
		"\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-"+
		"\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000"+
		"\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000"+
		"\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;"+
		"\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000"+
		"\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000"+
		"\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I"+
		"\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000"+
		"\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000"+
		"\u0000S\u0001\u0000\u0000\u0000\u0001U\u0001\u0000\u0000\u0000\u0003W"+
		"\u0001\u0000\u0000\u0000\u0005Y\u0001\u0000\u0000\u0000\u0007\\\u0001"+
		"\u0000\u0000\u0000\t^\u0001\u0000\u0000\u0000\u000b`\u0001\u0000\u0000"+
		"\u0000\rd\u0001\u0000\u0000\u0000\u000fh\u0001\u0000\u0000\u0000\u0011"+
		"k\u0001\u0000\u0000\u0000\u0013o\u0001\u0000\u0000\u0000\u0015r\u0001"+
		"\u0000\u0000\u0000\u0017u\u0001\u0000\u0000\u0000\u0019w\u0001\u0000\u0000"+
		"\u0000\u001by\u0001\u0000\u0000\u0000\u001d|\u0001\u0000\u0000\u0000\u001f"+
		"\u007f\u0001\u0000\u0000\u0000!\u0081\u0001\u0000\u0000\u0000#\u0083\u0001"+
		"\u0000\u0000\u0000%\u0085\u0001\u0000\u0000\u0000\'\u0087\u0001\u0000"+
		"\u0000\u0000)\u0089\u0001\u0000\u0000\u0000+\u008c\u0001\u0000\u0000\u0000"+
		"-\u008f\u0001\u0000\u0000\u0000/\u0091\u0001\u0000\u0000\u00001\u0093"+
		"\u0001\u0000\u0000\u00003\u0095\u0001\u0000\u0000\u00005\u0097\u0001\u0000"+
		"\u0000\u00007\u009c\u0001\u0000\u0000\u00009\u00a2\u0001\u0000\u0000\u0000"+
		";\u00a6\u0001\u0000\u0000\u0000=\u00ac\u0001\u0000\u0000\u0000?\u00b0"+
		"\u0001\u0000\u0000\u0000A\u00b3\u0001\u0000\u0000\u0000C\u00b8\u0001\u0000"+
		"\u0000\u0000E\u00bd\u0001\u0000\u0000\u0000G\u00c3\u0001\u0000\u0000\u0000"+
		"I\u00c6\u0001\u0000\u0000\u0000K\u00cc\u0001\u0000\u0000\u0000M\u00d1"+
		"\u0001\u0000\u0000\u0000O\u00d7\u0001\u0000\u0000\u0000Q\u00db\u0001\u0000"+
		"\u0000\u0000S\u00e2\u0001\u0000\u0000\u0000UV\u0005,\u0000\u0000V\u0002"+
		"\u0001\u0000\u0000\u0000WX\u0005;\u0000\u0000X\u0004\u0001\u0000\u0000"+
		"\u0000YZ\u0005:\u0000\u0000Z[\u0005=\u0000\u0000[\u0006\u0001\u0000\u0000"+
		"\u0000\\]\u0005(\u0000\u0000]\b\u0001\u0000\u0000\u0000^_\u0005)\u0000"+
		"\u0000_\n\u0001\u0000\u0000\u0000`a\u0005n\u0000\u0000ab\u0005o\u0000"+
		"\u0000bc\u0005t\u0000\u0000c\f\u0001\u0000\u0000\u0000de\u0005a\u0000"+
		"\u0000ef\u0005n\u0000\u0000fg\u0005d\u0000\u0000g\u000e\u0001\u0000\u0000"+
		"\u0000hi\u0005o\u0000\u0000ij\u0005r\u0000\u0000j\u0010\u0001\u0000\u0000"+
		"\u0000kl\u0005x\u0000\u0000lm\u0005o\u0000\u0000mn\u0005r\u0000\u0000"+
		"n\u0012\u0001\u0000\u0000\u0000op\u0005=\u0000\u0000pq\u0005=\u0000\u0000"+
		"q\u0014\u0001\u0000\u0000\u0000rs\u0005!\u0000\u0000st\u0005=\u0000\u0000"+
		"t\u0016\u0001\u0000\u0000\u0000uv\u0005<\u0000\u0000v\u0018\u0001\u0000"+
		"\u0000\u0000wx\u0005>\u0000\u0000x\u001a\u0001\u0000\u0000\u0000yz\u0005"+
		"<\u0000\u0000z{\u0005=\u0000\u0000{\u001c\u0001\u0000\u0000\u0000|}\u0005"+
		">\u0000\u0000}~\u0005=\u0000\u0000~\u001e\u0001\u0000\u0000\u0000\u007f"+
		"\u0080\u0005+\u0000\u0000\u0080 \u0001\u0000\u0000\u0000\u0081\u0082\u0005"+
		"-\u0000\u0000\u0082\"\u0001\u0000\u0000\u0000\u0083\u0084\u0005/\u0000"+
		"\u0000\u0084$\u0001\u0000\u0000\u0000\u0085\u0086\u0005*\u0000\u0000\u0086"+
		"&\u0001\u0000\u0000\u0000\u0087\u0088\u0005%\u0000\u0000\u0088(\u0001"+
		"\u0000\u0000\u0000\u0089\u008a\u0005<\u0000\u0000\u008a\u008b\u0005<\u0000"+
		"\u0000\u008b*\u0001\u0000\u0000\u0000\u008c\u008d\u0005>\u0000\u0000\u008d"+
		"\u008e\u0005>\u0000\u0000\u008e,\u0001\u0000\u0000\u0000\u008f\u0090\u0005"+
		"&\u0000\u0000\u0090.\u0001\u0000\u0000\u0000\u0091\u0092\u0005|\u0000"+
		"\u0000\u00920\u0001\u0000\u0000\u0000\u0093\u0094\u0005^\u0000\u0000\u0094"+
		"2\u0001\u0000\u0000\u0000\u0095\u0096\u0005~\u0000\u0000\u00964\u0001"+
		"\u0000\u0000\u0000\u0097\u0098\u0005t\u0000\u0000\u0098\u0099\u0005r\u0000"+
		"\u0000\u0099\u009a\u0005u\u0000\u0000\u009a\u009b\u0005e\u0000\u0000\u009b"+
		"6\u0001\u0000\u0000\u0000\u009c\u009d\u0005f\u0000\u0000\u009d\u009e\u0005"+
		"a\u0000\u0000\u009e\u009f\u0005l\u0000\u0000\u009f\u00a0\u0005s\u0000"+
		"\u0000\u00a0\u00a1\u0005e\u0000\u0000\u00a18\u0001\u0000\u0000\u0000\u00a2"+
		"\u00a3\u0005v\u0000\u0000\u00a3\u00a4\u0005a\u0000\u0000\u00a4\u00a5\u0005"+
		"r\u0000\u0000\u00a5:\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005b\u0000"+
		"\u0000\u00a7\u00a8\u0005e\u0000\u0000\u00a8\u00a9\u0005g\u0000\u0000\u00a9"+
		"\u00aa\u0005i\u0000\u0000\u00aa\u00ab\u0005n\u0000\u0000\u00ab<\u0001"+
		"\u0000\u0000\u0000\u00ac\u00ad\u0005e\u0000\u0000\u00ad\u00ae\u0005n\u0000"+
		"\u0000\u00ae\u00af\u0005d\u0000\u0000\u00af>\u0001\u0000\u0000\u0000\u00b0"+
		"\u00b1\u0005i\u0000\u0000\u00b1\u00b2\u0005f\u0000\u0000\u00b2@\u0001"+
		"\u0000\u0000\u0000\u00b3\u00b4\u0005t\u0000\u0000\u00b4\u00b5\u0005h\u0000"+
		"\u0000\u00b5\u00b6\u0005e\u0000\u0000\u00b6\u00b7\u0005n\u0000\u0000\u00b7"+
		"B\u0001\u0000\u0000\u0000\u00b8\u00b9\u0005e\u0000\u0000\u00b9\u00ba\u0005"+
		"l\u0000\u0000\u00ba\u00bb\u0005s\u0000\u0000\u00bb\u00bc\u0005e\u0000"+
		"\u0000\u00bcD\u0001\u0000\u0000\u0000\u00bd\u00be\u0005w\u0000\u0000\u00be"+
		"\u00bf\u0005h\u0000\u0000\u00bf\u00c0\u0005i\u0000\u0000\u00c0\u00c1\u0005"+
		"l\u0000\u0000\u00c1\u00c2\u0005e\u0000\u0000\u00c2F\u0001\u0000\u0000"+
		"\u0000\u00c3\u00c4\u0005d\u0000\u0000\u00c4\u00c5\u0005o\u0000\u0000\u00c5"+
		"H\u0001\u0000\u0000\u0000\u00c6\u00c7\u0005w\u0000\u0000\u00c7\u00c8\u0005"+
		"r\u0000\u0000\u00c8\u00c9\u0005i\u0000\u0000\u00c9\u00ca\u0005t\u0000"+
		"\u0000\u00ca\u00cb\u0005e\u0000\u0000\u00cbJ\u0001\u0000\u0000\u0000\u00cc"+
		"\u00cd\u0005r\u0000\u0000\u00cd\u00ce\u0005e\u0000\u0000\u00ce\u00cf\u0005"+
		"a\u0000\u0000\u00cf\u00d0\u0005d\u0000\u0000\u00d0L\u0001\u0000\u0000"+
		"\u0000\u00d1\u00d2\u0005s\u0000\u0000\u00d2\u00d3\u0005k\u0000\u0000\u00d3"+
		"\u00d4\u0005i\u0000\u0000\u00d4\u00d5\u0005p\u0000\u0000\u00d5N\u0001"+
		"\u0000\u0000\u0000\u00d6\u00d8\u0007\u0000\u0000\u0000\u00d7\u00d6\u0001"+
		"\u0000\u0000\u0000\u00d8\u00d9\u0001\u0000\u0000\u0000\u00d9\u00d7\u0001"+
		"\u0000\u0000\u0000\u00d9\u00da\u0001\u0000\u0000\u0000\u00daP\u0001\u0000"+
		"\u0000\u0000\u00db\u00df\u0007\u0001\u0000\u0000\u00dc\u00de\u0007\u0002"+
		"\u0000\u0000\u00dd\u00dc\u0001\u0000\u0000\u0000\u00de\u00e1\u0001\u0000"+
		"\u0000\u0000\u00df\u00dd\u0001\u0000\u0000\u0000\u00df\u00e0\u0001\u0000"+
		"\u0000\u0000\u00e0R\u0001\u0000\u0000\u0000\u00e1\u00df\u0001\u0000\u0000"+
		"\u0000\u00e2\u00e3\u0007\u0003\u0000\u0000\u00e3\u00e4\u0001\u0000\u0000"+
		"\u0000\u00e4\u00e5\u0006)\u0000\u0000\u00e5T\u0001\u0000\u0000\u0000\u0003"+
		"\u0000\u00d9\u00df\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}